# version: '3.9'

services:
  postgres:
    container_name: postgres_authen
    image: postgres:16
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: jwat_db
      PGDATA: /data/postgres_authen
    volumes:
      - postgres:/data/postgres_authen
    ports:
      - 5434:5432
    networks:
      - microservice-network
    restart: unless-stopped

  postgres-2:
    container_name: postgres_route
    image: postgres:16
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: route_service_db
      PGDATA: /data/postgres_route
    volumes:
      - postgres:/data/postgres_route
    ports:
      - 5433:5432
    networks:
      - microservice-network
    restart: unless-stopped

  redis-master:
    image: redis:6.0.7
    container_name: redis-master
    command: redis-server
    restart: always
    volumes:
      - redis_master:/data
    ports:
      - 6379:6379
    networks:
      - microservice-network

  redis-slave:
    image: redis:6.0.7
    container_name: redis-slave
    restart: always
    volumes:
      - redis_slave:/data
    ports:
      - 6479:6379
    command: redis-server --slaveof redis-master 6379
    networks:
      - microservice-network

  authentication-service:
    build: ./authentication-service
    image: namnvd/authentication-service:latest
    container_name: authentication_service
    ports:
      - "3001:3001"
      - "7000:7000"
    env_file:
      - ./authentication-service/.env
    networks:
      - microservice-network
    depends_on:
      - redis-master
      # - postgres
      - kafka

  route-service:
    build:
      context: ./route-service
      dockerfile: Dockerfile
    image: namnvd/route-service:latest
    container_name: route_service
    ports:
      - "3002:3002"
    env_file:
      - ./route-service/.env
    networks:
      - microservice-network
    # depends_on:
    #   - postgres-2
    #   - redis-master

  notification-service:
    build: ./notification-service
    image: namnvd/notification-service:latest
    container_name: notification_service
    env_file:
      - ./notification-service/.env
    ports:
      - "3003:3003"
    environment:
      KAFKA_BROKERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - microservice-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - microservice-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS: 10000
      KAFKA_CONNECTIONS_MAX_IDLE_MS: 300000
    networks:
      - microservice-network

  nginx:
    image: nginx:latest
    container_name: nginx_gateway
    ports:
      - "3000:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - microservice-network
    depends_on:
      - authentication-service

networks:
  microservice-network:
    name: srms-server_microservice-network
    driver: bridge

  kafka-cluster-network:
    driver: bridge

volumes:
  postgres:
  redis_master:
  redis_slave:
